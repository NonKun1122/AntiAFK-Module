local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

--====================== UI ======================
local playerGui = player:WaitForChild("PlayerGui")
if playerGui:FindFirstChild("WarpAttackUI") then playerGui.WarpAttackUI:Destroy() end

local gui = Instance.new("ScreenGui")
gui.Name = "WarpAttackUI"
gui.ResetOnSpawn = false
gui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0,300,0,200)
frame.Position = UDim2.new(0.05,0,0.15,0)
frame.BackgroundColor3 = Color3.fromRGB(35,35,35)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,0,0,30)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.Text = "Auto Warp Attack"
title.Parent = frame

-- Toggle Auto Warp
local toggles = {}
local function makeToggle(name)
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(1,0,0,35)
    b.Position = UDim2.new(0,0,0,40 + (#frame:GetChildren()-2)*40)
    b.BackgroundColor3 = Color3.fromRGB(50,50,50)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Font = Enum.Font.SourceSansBold
    b.TextSize = 18
    b.Text = name..": OFF"
    b.Parent = frame

    toggles[name] = false
    b.MouseButton1Click:Connect(function()
        toggles[name] = not toggles[name]
        b.Text = name..(toggles[name] and ": ON" or ": OFF")
        b.BackgroundColor3 = toggles[name] and Color3.fromRGB(0,170,0) or Color3.fromRGB(50,50,50)
    end)
end

makeToggle("Auto Warp Attack")

-- Skill Buttons
local skillSequence = {"Z","X","C","E","G"}
local skillIndex = 1
local skillCooldown = 0.3
local lastSkill = tick()

local skillFrame = Instance.new("Frame")
skillFrame.Size = UDim2.new(1,0,0,50)
skillFrame.Position = UDim2.new(0,0,0,140)
skillFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
skillFrame.Parent = frame

for i,k in pairs(skillSequence) do
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(0,50,1,0)
    b.Position = UDim2.new((i-1)*0.18,0,0,0)
    b.BackgroundColor3 = Color3.fromRGB(70,70,70)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Font = Enum.Font.SourceSansBold
    b.TextSize = 18
    b.Text = k
    b.Parent = skillFrame

    b.MouseButton1Click:Connect(function()
        UserInputService.InputBegan:Fire({UserInputType=Enum.UserInputType.Keyboard,KeyCode=Enum.KeyCode[k]},false)
    end)
end

--====================== Helper Functions ======================
local function nearestZombie()
    local nearest,dist = nil, math.huge
    if not char or not char:FindFirstChild("HumanoidRootPart") then return nil end
    for _,z in pairs(workspace:GetChildren()) do
        if z:FindFirstChild("Humanoid") and z:FindFirstChild("HumanoidRootPart") and z.Humanoid.Health>0 then
            local d = (z.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude
            if d < dist then nearest,dist = z,d end
        end
    end
    return nearest
end

local function useNextSkill()
    if tick() - lastSkill >= skillCooldown then
        local key = skillSequence[skillIndex]
        if key then
            UserInputService.InputBegan:Fire({UserInputType=Enum.UserInputType.Keyboard, KeyCode=Enum.KeyCode[key]}, false)
            skillIndex = skillIndex + 1
            if skillIndex > #skillSequence then skillIndex = 1 end
            lastSkill = tick()
        end
    end
end

--====================== Main Loop ======================
RunService.RenderStepped:Connect(function()
    if toggles["Auto Warp Attack"] and char and char:FindFirstChild("HumanoidRootPart") then
        local z = nearestZombie()
        if z then
            -- Warp to zombie
            char.HumanoidRootPart.CFrame = z.HumanoidRootPart.CFrame + Vector3.new(0,1,0)
            -- Skill combo
            useNextSkill()
            -- Tool
            local tool = char:FindFirstChildOfClass("Tool")
            if tool then tool:Activate() end
            -- Gun
            local gun = char:FindFirstChild("Gun")
            if gun and gun:FindFirstChild("Shoot") then
                pcall(function() gun.Shoot:FireServer(z.HumanoidRootPart.Position) end)
            end
        end
    end
end)
