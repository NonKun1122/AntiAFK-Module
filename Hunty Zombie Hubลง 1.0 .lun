-- LocalScript à¹ƒà¸ªà¹ˆ StarterPlayerScripts
local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")

-- Anti AFK / Anti Kick
player.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)
local mt=getrawmetatable(game)
local old=mt.__namecall
setreadonly(mt,false)
mt.__namecall=newcclosure(function(self,...)
    if getnamecallmethod()=="Kick" then warn("ðŸš« Kick blocked") return end
    return old(self,...)
end)

-- Character update
local function updateChar() char=player.Character or player.CharacterAdded:Wait() end
player.CharacterAdded:Connect(updateChar)

-- GUI Setup
local gui = Instance.new("ScreenGui",player:WaitForChild("PlayerGui"))
gui.Name="ZombieHub2.1"

local function createTab(name)
    local tabFrame = Instance.new("Frame", gui)
    tabFrame.Size = UDim2.new(0,250,0,350)
    tabFrame.Position = UDim2.new(0.05,0,0.4,0)
    tabFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
    tabFrame.Active = true
    tabFrame.Draggable = true

    local title = Instance.new("TextLabel", tabFrame)
    title.Size=UDim2.new(1,0,0,30)
    title.BackgroundTransparency=1
    title.TextColor3=Color3.fromRGB(255,255,255)
    title.Font=Enum.Font.SourceSansBold
    title.TextSize=20
    title.Text=name

    local layout=Instance.new("UIListLayout",tabFrame)
    layout.Padding=UDim.new(0,6)
    layout.SortOrder=Enum.SortOrder.LayoutOrder

    return tabFrame
end

-- Tabs
local autoTab=createTab("Auto")
local skillTab=createTab("Skills")
local settingsTab=createTab("Settings")

-- Toggles & Slider Table
local toggles={} 
local sliders={} 
local keybinds={Z=Enum.KeyCode.Z,X=Enum.KeyCode.X,C=Enum.KeyCode.C,E=Enum.KeyCode.E,G=Enum.KeyCode.G}

-- Function: Toggle Button
local function makeToggle(tab,name)
    local b=Instance.new("TextButton",tab)
    b.Size=UDim2.new(1,0,0,35)
    b.BackgroundColor3=Color3.fromRGB(50,50,50)
    b.TextColor3=Color3.fromRGB(255,255,255)
    b.Font=Enum.Font.SourceSansBold
    b.TextSize=18
    b.Text=name..": OFF"
    toggles[name]=false
    b.MouseButton1Click:Connect(function()
        toggles[name]=not toggles[name]
        b.Text=name..(toggles[name] and ": ON" or ": OFF")
        b.BackgroundColor3=toggles[name] and Color3.fromRGB(0,170,0) or Color3.fromRGB(50,50,50)
    end)
end

-- Function: Slider
local function makeSlider(tab,name,min,max,default,callback)
    local frame=Instance.new("Frame",tab)
    frame.Size=UDim2.new(1,0,0,50)
    frame.BackgroundColor3=Color3.fromRGB(40,40,40)

    local label=Instance.new("TextLabel",frame)
    label.Size=UDim2.new(1,0,0,20)
    label.BackgroundTransparency=1
    label.TextColor3=Color3.fromRGB(255,255,255)
    label.Font=Enum.Font.SourceSans
    label.TextSize=16
    label.Text=name.." "..default

    local slider = Instance.new("TextButton",frame)
    slider.Size=UDim2.new(1,0,0,20)
    slider.Position=UDim2.new(0,0,0,25)
    slider.BackgroundColor3=Color3.fromRGB(70,70,70)
    slider.Text=""

    slider.MouseButton1Down:Connect(function()
        local conn
        conn = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType==Enum.UserInputType.MouseMovement then
                local ratio=math.clamp((input.Position.X - slider.AbsolutePosition.X)/slider.AbsoluteSize.X,0,1)
                local value = math.floor(min + (max-min)*ratio)
                label.Text=name.." "..value
                callback(value)
            end
        end)
        UserInputService.InputEnded:Wait()
        conn:Disconnect()
    end)
end

-- Auto Tab
makeToggle(autoTab,"Auto Farm")
makeToggle(autoTab,"Auto Buy")
makeSlider(autoTab,"Auto Farm Speed",1,50,10,function(val) _G.farmSpeed=val end)
makeSlider(autoTab,"Attack Range",1,50,10,function(val) _G.attackRange=val end)

-- Skills Tab
for k,v in pairs(keybinds) do
    makeToggle(skillTab,"Skill "..k)
end

-- Settings Tab
makeToggle(settingsTab,"ESP")
makeToggle(settingsTab,"God Mode")

-- Helper: nearest zombie
local function nearestZombie()
    local nearest,dist=nil,math.huge
    for _,z in pairs(workspace:GetChildren()) do
        if z:FindFirstChild("Humanoid") and z:FindFirstChild("HumanoidRootPart") then
            local d=(z.HumanoidRootPart.Position-char.HumanoidRootPart.Position).Magnitude
            if d<dist and z.Humanoid.Health>0 then nearest,dist=z,d end
        end
    end
    return nearest
end

-- Skill Use
local function useSkill(key)
    local hum=char:FindFirstChild("Humanoid")
    if not hum then return end
    local z=nearestZombie()
    if key==keybinds.Z then char.HumanoidRootPart.CFrame=char.HumanoidRootPart.CFrame*CFrame.new(0,0,-10)
    elseif key==keybinds.X then
        for _,m in pairs(workspace:GetChildren()) do
            if m:FindFirstChild("Humanoid") and (m.HumanoidRootPart.Position-char.HumanoidRootPart.Position).Magnitude<20 then
                m.Humanoid:TakeDamage(25)
            end
        end
    elseif key==keybinds.C then hum.Health=math.min(hum.MaxHealth,hum.Health+50)
    elseif key==keybinds.E and z then z.Humanoid:TakeDamage(40)
    elseif key==keybinds.G and z then char:MoveTo(z.HumanoidRootPart.Position+Vector3.new(0,3,0)) end
end
UserInputService.InputBegan:Connect(function(input,gpe) if not gpe then useSkill(input.KeyCode) end end)

-- Main Loop
RunService.RenderStepped:Connect(function()
    updateChar()
    local z=nearestZombie()

    -- Auto Farm
    if toggles["Auto Farm"] and z then
        local speed=_G.farmSpeed or 10
        char:MoveTo(z.HumanoidRootPart.Position+Vector3.new(0,3,0))
        local tool=char:FindFirstChildOfClass("Tool")
        if tool then tool:Activate() end
    end

    -- Auto Buy
    if toggles["Auto Buy"] then
        local shop=workspace:FindFirstChild("Shop")
        if shop then
            for _,item in pairs(shop:GetChildren()) do
                if item:IsA("Tool") then
                    local clone=item:Clone()
                    clone.Parent=player.Backpack
                end
            end
        end
    end

    -- God Mode
    if toggles["God Mode"] and char:FindFirstChild("Humanoid") then
        char.Humanoid.Health=char.Humanoid.MaxHealth
    end

    -- ESP
    if toggles["ESP"] then
        for _,m in pairs(workspace:GetChildren()) do
            if m:FindFirstChild("Humanoid") and not m:FindFirstChild("Highlight") then
                local hl=Instance.new("Highlight")
                hl.FillColor=Color3.fromRGB(255,0,0)
                hl.OutlineColor=Color3.fromRGB(255,255,255)
                hl.Adornee=m
                hl.Parent=m
            end
        end
    end
end)
